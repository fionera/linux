/*Copyright (C) 2007-2013 Realtek Semiconductor Corporation.*/
#ifndef __RTK_CEC_RTD299X_REG_H__
#define __RTK_CEC_RTD299X_REG_H__

#include "rtk_cec_rtd299x.h"
#include <mach/irqs.h>

#define ISO_IRQ                   IRQ_CEC
#define write_reg32(addr, val)   	rtd_outl(addr, val)
#define read_reg32(addr)            	rtd_inl(addr)

#define RTK_DPI_DLL_CRT_SSC1  (0xB803A024)
#define RTK_DPI_DLL_CRT_SSC2  (0xB803A028)

#define RTK_CRT_SSC1_get_dpi_f_code(data) ((0x00001FFF&(data))>>0)
#define RTK_CRT_SSC2_get_dpi_n_code(data)  ((0x000000FF&(data))>>0)

#define RTK_ST_CLKEN1	(0xb8060044)
#define RTK_ST_SRST1	(0xb8060034)

#define RTK_CEC_CR0	(0xB8061E00)
#define RTK_CEC_RTCR0	(0xB8061E04)
#define RTK_CEC_RXCR0	(0xB8061E08)
#define RTK_CEC_TXCR0	(0xB8061E0C)
#define RTK_CEC_TXDR0	(0xB8061E10)
#define RTK_CEC_TXDR1	(0xB8061E14)
#define RTK_CEC_TXDR2	(0xB8061E18)
#define RTK_CEC_TXDR3	(0xB8061E1C)
#define RTK_CEC_TXDR4	(0xB8061E20)
#define RTK_CEC_RXDR1	(0xB8061E24)
#define RTK_CEC_RXDR2	(0xB8061E28)
#define RTK_CEC_RXDR3	(0xB8061E2C)
#define RTK_CEC_RXDR4	(0xB8061E30)
#define RTK_CEC_RXTCR0	(0xB8061E34)
#define RTK_CEC_TXTCR0	(0xB8061E38)
#define RTK_CEC_TXTCR1	(0xB8061E3C)

#define RTK_GDI_CEC_COMPARE_OPCODE_01		(0xB8061E40)
#define RTK_GDI_CEC_SEND_OPCODE_01		(0xB8061E44)
#define RTK_GDI_CEC_SEND_OPERAND_NUMBER_01	(0xB8061E48)
#define RTK_GDI_CEC_OPERAND_01			(0xB8061E4C)
#define RTK_GDI_CEC_OPERAND_02			(0xB8061E50)
#define RTK_GDI_CEC_OPERAND_03			(0xB8061E54)
#define RTK_GDI_CEC_COMPARE_OPCODE_02		(0xB8061E58)
#define RTK_GDI_CEC_SEND_OPCODE_02		(0xB8061E5C)
#define RTK_GDI_CEC_SEND_OPERAND_NUMBER_02	(0xB8061E60)
#define RTK_GDI_CEC_OPERAND_04			(0xB8061E64)
#define RTK_GDI_CEC_OPERAND_05			(0xB8061E68)
#define RTK_GDI_CEC_OPERAND_06			(0xB8061E6C)
#define RTK_GDI_CEC_COMPARE_OPCODE_03		(0xB8061E70)
#define RTK_GDI_CEC_SEND_OPCODE_03		(0xB8061E74)
#define RTK_GDI_CEC_SEND_OPERAND_NUMBER_03	(0xB8061E78)
#define RTK_GDI_CEC_OPERAND_07			(0xB8061E7C)
#define RTK_GDI_CEC_OPERAND_08			(0xB8061E80)
#define RTK_GDI_CEC_OPERAND_09			(0xB8061E84)
#define RTK_GDI_CEC_COMPARE_OPCODE_04		(0xB8061E88)
#define RTK_GDI_CEC_SEND_OPCODE_04		(0xB8061E8C)
#define RTK_GDI_CEC_SEND_OPERAND_NUMBER_04	(0xB8061E90)
#define RTK_GDI_CEC_OPERAND_10			(0xB8061E94)
#define RTK_GDI_CEC_OPERAND_11			(0xB8061E98)
#define RTK_GDI_CEC_OPERAND_12			(0xB8061E9C)
#define RTK_GDI_CEC_COMPARE_OPCODE_05		(0xB8061EA0)
#define RTK_GDI_CEC_COMPARE_OPCODE_06		(0xB8061EA4)
#define RTK_GDI_CEC_COMPARE_OPCODE_07		(0xB8061EA8)
#define RTK_GDI_CEC_COMPARE_OPCODE_08		(0xB8061EAC)
#define RTK_GDI_CEC_COMPARE_OPCODE_09		(0xB8061EB0)
#define RTK_GDI_CEC_COMPARE_OPCODE_10		(0xB8061EB4)
#define RTK_GDI_CEC_COMPARE_OPCODE_11		(0xB8061EB8)
#define RTK_GDI_CEC_COMPARE_OPCODE_12		(0xB8061EBC)
#define RTK_GDI_CEC_COMPARE_OPCODE_13		(0xB8061EC0)
#define RTK_GDI_CEC_COMPARE_OPCODE_14		(0xB8061EC4)
#define RTK_GDI_CEC_COMPARE_OPCODE_15		(0xB8061EC8)

#define RTK_GDI_CEC_OPCODE_ENABLE		(0xB8061ECC)
#define RTK_GDI_POWER_SAVING_MODE		(0xB8061ED0)
#define RTK_CEC_RxACKTCR0			(0xB8061ED4)
#define RTK_CEC_RxACKTCR1			(0xB8061ED8)
#define RTK_CEC_TxRxACKOPTION			(0xB8061EDC)


#if defined(CONFIG_ARCH_RTK299O) || defined(CONFIG_ARCH_RTK293x) || defined(CONFIG_ARCH_RTK289X)

#define RTK_CEC_INT_EN		SYS_REG_INT_CTRL_SCPU_reg
#define RTK_CEC_SYS_PLL_BUS2	0xb8000424
#define RTD299x_CEC_SYS_PLL_BUS2    0xb8000424
#else
#define RTK_CEC_INT_EN		CRT_INT_CTRL_SCPU_reg
#define RTK_CEC_SYS_PLL_BUS2	CRT_SYS_PLL_BUS2_reg
#endif


#define RTK_CEC_RxACKTCR0	(0xB8061ED4)
#define RTK_CEC_RxACKTCR1	(0xB8061ED8)

#ifdef	CONFIG_MACH_RTK_298x
#define CEC_MODEL_NAME		"RTD298x"
#define CEC_DRIVE_NAME			("rtd298x_cec")
#elif defined (CONFIG_ARCH_RTK293x)
#define CEC_MODEL_NAME		"RTD293x"
#define CEC_DRIVE_NAME			("rtd293x_cec")
#else
#define CEC_MODEL_NAME		"RTD299x"
#define CEC_DRIVE_NAME			("rtd299x_cec")
#endif

#define CEC_CLKEN		RTK_ST_CLKEN1
#define CEC_SRST		RTK_ST_SRST1
#define CEC_CR0			RTK_CEC_CR0
#define CEC_RTCR0		RTK_CEC_RTCR0
#define CEC_RXCR0		RTK_CEC_RXCR0
#define CEC_TXCR0		RTK_CEC_TXCR0
#define CEC_TXDR0		RTK_CEC_TXDR0
#define CEC_TXDR1		RTK_CEC_TXDR1
#define CEC_TXDR2		RTK_CEC_TXDR2
#define CEC_TXDR3		RTK_CEC_TXDR3
#define CEC_TXDR4		RTK_CEC_TXDR4
#define CEC_RXDR1		RTK_CEC_RXDR1
#define CEC_RXDR2		RTK_CEC_RXDR2
#define CEC_RXDR3		RTK_CEC_RXDR3
#define CEC_RXDR4		RTK_CEC_RXDR4
#define CEC_RXTCR0		RTK_CEC_RXTCR0
#define CEC_TXTCR0		RTK_CEC_TXTCR0
#define CEC_TXTCR1		RTK_CEC_TXTCR1
#define CEC_INT_EN		RTK_CEC_INT_EN
#define CEC_INT_EN_MASK		(0x1<<22)
#define CEC_INT_EN_VAL		(0x1<<22)

#define CEC_RxACKTCR0		RTK_CEC_RxACKTCR0
#define CEC_RxACKTCR1		RTK_CEC_RxACKTCR1


#define GDI_CEC_COMPARE_OPCODE_01	RTK_GDI_CEC_COMPARE_OPCODE_01
#define GDI_CEC_SEND_OPCODE_01		RTK_GDI_CEC_SEND_OPCODE_01
#define GDI_CEC_SEND_OPERAND_NUMBER_01	RTK_GDI_CEC_SEND_OPERAND_NUMBER_01
#define GDI_CEC_OPERAND_01		RTK_GDI_CEC_OPERAND_01
#define GDI_CEC_OPERAND_02		RTK_GDI_CEC_OPERAND_02
#define GDI_CEC_OPERAND_03		RTK_GDI_CEC_OPERAND_03
#define GDI_CEC_COMPARE_OPCODE_02	RTK_GDI_CEC_COMPARE_OPCODE_02
#define GDI_CEC_SEND_OPCODE_02		RTK_GDI_CEC_SEND_OPCODE_02
#define GDI_CEC_SEND_OPERAND_NUMBER_02	RTK_GDI_CEC_SEND_OPERAND_NUMBER_02
#define GDI_CEC_OPERAND_04		RTK_GDI_CEC_OPERAND_04
#define GDI_CEC_OPERAND_05		RTK_GDI_CEC_OPERAND_05
#define GDI_CEC_OPERAND_06		RTK_GDI_CEC_OPERAND_06
#define GDI_CEC_COMPARE_OPCODE_03	RTK_GDI_CEC_COMPARE_OPCODE_03
#define GDI_CEC_SEND_OPCODE_03		RTK_GDI_CEC_SEND_OPCODE_03
#define GDI_CEC_SEND_OPERAND_NUMBER_03	RTK_GDI_CEC_SEND_OPERAND_NUMBER_03
#define GDI_CEC_OPERAND_07		RTK_GDI_CEC_OPERAND_07
#define GDI_CEC_OPERAND_08		RTK_GDI_CEC_OPERAND_08
#define GDI_CEC_OPERAND_09		RTK_GDI_CEC_OPERAND_09
#define GDI_CEC_COMPARE_OPCODE_04	RTK_GDI_CEC_COMPARE_OPCODE_04
#define GDI_CEC_SEND_OPCODE_04		RTK_GDI_CEC_SEND_OPCODE_04
#define GDI_CEC_SEND_OPERAND_NUMBER_04	RTK_GDI_CEC_SEND_OPERAND_NUMBER_04
#define GDI_CEC_OPERAND_10		RTK_GDI_CEC_OPERAND_10
#define GDI_CEC_OPERAND_11		RTK_GDI_CEC_OPERAND_11
#define GDI_CEC_OPERAND_12		RTK_GDI_CEC_OPERAND_12
#define GDI_CEC_COMPARE_OPCODE_05	RTK_GDI_CEC_COMPARE_OPCODE_05
#define GDI_CEC_COMPARE_OPCODE_06	RTK_GDI_CEC_COMPARE_OPCODE_06
#define GDI_CEC_COMPARE_OPCODE_07	RTK_GDI_CEC_COMPARE_OPCODE_07
#define GDI_CEC_COMPARE_OPCODE_08	RTK_GDI_CEC_COMPARE_OPCODE_08
#define GDI_CEC_COMPARE_OPCODE_09	RTK_GDI_CEC_COMPARE_OPCODE_09
#define GDI_CEC_COMPARE_OPCODE_10	RTK_GDI_CEC_COMPARE_OPCODE_10
#define GDI_CEC_COMPARE_OPCODE_11	RTK_GDI_CEC_COMPARE_OPCODE_11
#define GDI_CEC_COMPARE_OPCODE_12	RTK_GDI_CEC_COMPARE_OPCODE_12
#define GDI_CEC_COMPARE_OPCODE_13	RTK_GDI_CEC_COMPARE_OPCODE_13
#define GDI_CEC_COMPARE_OPCODE_14	RTK_GDI_CEC_COMPARE_OPCODE_14
#define GDI_CEC_COMPARE_OPCODE_15	RTK_GDI_CEC_COMPARE_OPCODE_15

#define GDI_CEC_OPCODE_ENABLE		RTK_GDI_CEC_OPCODE_ENABLE
#define GDI_POWER_SAVING_MODE		RTK_GDI_POWER_SAVING_MODE
#define CEC_RxACKTCR0			RTK_CEC_RxACKTCR0
#define CEC_RxACKTCR1			RTK_CEC_RxACKTCR1
#define CEC_TxRxACKOPTION		RTK_CEC_TxRxACKOPTION



// CLKEN
#define CLKEN_CEC		(0x1<<7)
#define RSTN_CEC		(0x1<<7)

/* CR0 */
#define LOGICAL_ADDR_SHIFT	24

#define CEC_MODE(x)		((x & 0x3)<<30)
#define TEST_MODE_PAD_EN	(0x1<<28)
#define LOGICAL_ADDR(x)		((x & 0xF)<<LOGICAL_ADDR_SHIFT)
#define TIMER_DIV(x)		((x & 0xFF)<<16)
#define PRE_DIV(x)		((x & 0xFF)<<8)
#define UNREG_ACK_EN		(1<<7)
#define CDC_ARBITRATION_EN	(0x1<<5)
#define TEST_MODE_DATA(x)	(x & 0x1F)

#define CEC_MODE_MASK		(CEC_MODE(3))
#define LOGICAL_ADDR_MASK	(LOGICAL_ADDR(0xF))
#define CTRL_MASK1		(CEC_MODE_MASK | LOGICAL_ADDR_MASK)

/* RTCR0 */
#define CEC_PAD_IN		(0x1<<31)

#ifdef	CONFIG_MACH_RTK_298x

#define	CEC_PAD_EN		(0x1<<17)
#define	CEC_PAD_EN_MODE		(0x1<<16)
#define	CEC_HW_RETRY_EN		(0x01<<12)

#else

#define CEC_EOM_ON		(0x01<<12)

#endif

#define CLEAR_CEC_INT		(0x1<<11)
#define WT_CNT(x)		((x & 0x3F)<<5)
#define LATTEST			(0x1<<4)
#define RETRY_NO_MASK		(0x0F)
#define RETRY_NO(x)		(x & 0xF)

/* RXCR0 */
#define INIT_ADDR_SHIFT		(8)

#define BROADCAST_ADDR		(0x1<<31)
#define RX_SAME_LA_ACK		(0x1<<24)
#define STB_ADDR_SEL		(0x1<<20)
#define STB_INIT_ADDR(x)	((x & 0xF)<<16)
#define RX_EN			(0x1<<15)
#define RX_RST			(0x1<<14)
#define RX_CONTINUOUS		(0x1<<13)
#define RX_INT_EN		(0x1<<12)
#define INIT_ADDR(x)		((x & 0xF)<<INIT_ADDR_SHIFT)
#define RX_EOM			(0x1<<7)
#define RX_INT			(0x1<<6)
#define RX_FIFO_OV		(0x1<<5)
#define RX_FIFO_CNT(x)		(x & 0x1F)

#define INIT_ADDR_MASK		INIT_ADDR(0xF)

/* TXCR0 */
#define TX_ADDR_EN		(0x1<<20)
#define TX_ADDR(x)		((x & 0xF)<<16)
#define TX_EN			(0x1<<15)
#define TX_RST			(0x1<<14)
#define TX_CONTINUOUS		(0x1<<13)
#define TX_INT_EN		(0x1<<12)
#define DEST_ADDR(x)		((x & 0xF)<<8)
#define TX_EOM			(0x1<<7)
#define TX_INT			(0x1<<6)
#define TX_FIFO_UD		(0x1<<5)
#define TX_FIFO_CNT(x)		(x & 0x1F)

/* TXDR0 */
#define TX_ADD_CNT		(0x1<<6)
#define RX_SUB_CNT		(0x1<<5)
#define FIFO_CNT(x)		(x & 0x1F)

/* RXTCR0 */
#define RX_START_LOW(x)		((x & 0xFF)<<24)
#define RX_START_PERIOD(x)	((x & 0xFF)<<16)
#define RX_DATA_SAMPLE(x)	((x & 0xFF)<<8)
#define RX_DATA_PERIOD(x)	(x & 0xFF)

/* TXCR0/1 */
#define TX_START_LOW(x)		((x & 0xFF)<<8)
#define TX_START_HIGH(x)	((x & 0xFF))

#define TX_DATA_LOW(x)		((x & 0xFF)<<16)
#define TX_DATA_01(x)		((x & 0xFF)<<8)
#define TX_DATA_HIGH(x)		((x & 0xFF))

// RxACKTCR1
#define RX_ACK_LOW_SEL		(0x01<<26)
#define RX_ACK_BIT_SEL		(0X01<<25)
#define RX_ACK_ACK_LINE_ERR_SEL	(0X01<<24)
#define RX_ACK_LOW(x)		((x & 0xFF)<<16)
#define RX_ACK_BIT(x)		((x & 0xFF)<<8)
#define RX_ACK_LINE_ERR(x)	((x & 0xFF))


#define _ZERO		0x00
#define _BIT0		0x01
#define _BIT1		0x02
#define _BIT2		0x04
#define _BIT3		0x08
#define _BIT4		0x10
#define _BIT5		0x20
#define _BIT6		0x40
#define _BIT7		0x80
#define _BIT8		0x0100
#define _BIT9		0x0200
#define _BIT10		0x0400
#define _BIT11		0x0800
#define _BIT12		0x1000
#define _BIT13		0x2000
#define _BIT14		0x4000
#define _BIT15		0x8000
#define _BIT16		0x10000
#define _BIT17		0x20000
#define _BIT18		0x40000
#define _BIT19		0x80000
#define _BIT20		0x100000
#define _BIT21		0x200000
#define _BIT22		0x400000
#define _BIT23		0x800000
#define _BIT24		0x1000000
#define _BIT25		0x2000000
#define _BIT26		0x4000000
#define _BIT27		0x8000000
#define _BIT28		0x10000000
#define _BIT29		0x20000000
#define _BIT30		0x40000000
#define _BIT31		0x80000000

#endif // __CEC_RTK_REG_H__
