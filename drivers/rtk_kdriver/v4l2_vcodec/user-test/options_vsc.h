
/*
 * NOTE:
 * THIS FILE IS AUTOGENERATED VIA OPTIONS.PY. DO NOT EDIT.
 */

#include <getopt.h>

enum {
    OPT_PICW,
    OPT_PICH,
    OPT_OUTW,
    OPT_OUTH,
    OPT_INPUT_TYPE,
    OPT_INPUT_ATTR,
    OPT_INPUT_RESOURCEINDEX,
    OPT_OUTPUT_MODE,
    OPT_WINID,
    OPT_HELP
};

typedef struct {
    int picW;
    int picW_cnt;
    int picH;
    int picH_cnt;
    int outW;
    int outW_cnt;
    int outH;
    int outH_cnt;
    int input_type;
    int input_type_cnt;
    int input_attr;
    int input_attr_cnt;
    int input_resourceIndex;
    int input_resourceIndex_cnt;
    int output_mode;
    int output_mode_cnt;
    int winID;
    int winID_cnt;
} opts_t;

static struct option long_options[] = {
    {"picW",                required_argument, 0, OPT_PICW},
    {"picH",                required_argument, 0, OPT_PICH},
    {"outW",                required_argument, 0, OPT_OUTW},
    {"outH",                required_argument, 0, OPT_OUTH},
    {"input_type",          required_argument, 0, OPT_INPUT_TYPE},
    {"input_attr",          required_argument, 0, OPT_INPUT_ATTR},
    {"input_resourceIndex", required_argument, 0, OPT_INPUT_RESOURCEINDEX},
    {"output_mode",         required_argument, 0, OPT_OUTPUT_MODE},
    {"winID",               required_argument, 0, OPT_WINID},
    {"help",                      no_argument, 0, OPT_HELP},
    {0, 0, 0, 0}
};

#define OPTSTRING "w:h:"

static void printUsage ()
{
    printf("\t-w, --picW number            : picW (Default: 1920)\n");
    printf("\t-h, --picH number            : picH (Default: 1080)\n");
    printf("\t--outW number                : outW (Default: 3840)\n");
    printf("\t--outH number                : outH (Default: 2160)\n");
    printf("\t--input_type number          : input type (Default: 3)\n");
    printf("\t--input_attr number          : input attr (Default: 0)\n");
    printf("\t--input_resourceIndex number : input resource index (Default: 0)\n");
    printf("\t--output_mode number         : output mode (Default: 0)\n");
    printf("\t--winID number               : window ID (Default: 0)\n");
}

static void parseArgs(opts_t *opts, int argc, char **argv)
{
    int opt;
    while ((opt = getopt_long (argc, argv, OPTSTRING, long_options, NULL)) != -1)
        switch (opt) {
            case 'w':
            case OPT_PICW:
                opts->picW = strtoul(optarg, NULL, 0);
                opts->picW_cnt++;
                break;
            case 'h':
            case OPT_PICH:
                opts->picH = strtoul(optarg, NULL, 0);
                opts->picH_cnt++;
                break;
            case OPT_OUTW:
                opts->outW = strtoul(optarg, NULL, 0);
                opts->outW_cnt++;
                break;
            case OPT_OUTH:
                opts->outH = strtoul(optarg, NULL, 0);
                opts->outH_cnt++;
                break;
            case OPT_INPUT_TYPE:
                opts->input_type = strtoul(optarg, NULL, 0);
                opts->input_type_cnt++;
                break;
            case OPT_INPUT_ATTR:
                opts->input_attr = strtoul(optarg, NULL, 0);
                opts->input_attr_cnt++;
                break;
            case OPT_INPUT_RESOURCEINDEX:
                opts->input_resourceIndex = strtoul(optarg, NULL, 0);
                opts->input_resourceIndex_cnt++;
                break;
            case OPT_OUTPUT_MODE:
                opts->output_mode = strtoul(optarg, NULL, 0);
                opts->output_mode_cnt++;
                break;
            case OPT_WINID:
                opts->winID = strtoul(optarg, NULL, 0);
                opts->winID_cnt++;
                break;
            case OPT_HELP:
            default:
                printUsage();
                exit(0);
                break;
        }
}

opts_t opts = {
    .picW = 1920,
    .picH = 1080,
    .outW = 3840,
    .outH = 2160,
    .input_type = 3,
    .input_attr = 0,
    .input_resourceIndex = 0,
    .output_mode = 0,
    .winID = 0,
};

